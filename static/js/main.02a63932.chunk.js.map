{"version":3,"sources":["components/TodoList/Searchbar.js","components/TodoList/Task.js","components/TodoList/Tasklist.js","components/TodoList/Add.js","components/TodoList/TodoContainer.js","components/planner/CTask.js","components/planner/TaskTarget.js","components/planner/Calendar.js","App.js","index.js"],"names":["SearchBar","props","react_default","a","createElement","type","value","onChange","placeholder","Task","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","connectDragSource","children","Component","DragSource","beginDrag","monitor","component","id","body","timeLength","connect","dragSource","TaskHolder","_this","tasks","taskList","filter","item","toLowerCase","includes","searchTerm","map","task","TodoList_Task","className","data-key","onClick","React","Add","onSubmit","taskItems","TodoContainer","state","newTaskName","handleChange","e","setState","target","handleMake","handleDelete","toString","dataset","handleClearTodo","handleSubmit","length","preventDefault","alert","uuidv4","require","concat","toConsumableArray","build_default","parent","Searchbar","TodoList_Add","handleClearSchedule","Tasklist","dropSpec","hover","dropIndex","index","dragIndex","getItem","node","ReactDOM","findDOMNode","nodePosition","getBoundingClientRect","nodeVerticalCenter","bottom","top","mousePositionFromTop","getClientOffset","y","moveCard","CTask","_this$props","canDrop","incrementHeight","decrementHeight","deleteTask","connectDropTarget","opacity","isDragging","border","data-index","style","gridRow","DropTarget","dropTarget","TaskTarget","isOver","dropClass","i","planner_CTask","drop","onDrop","Calendar","handleDecrement","handleIncrement","planner_TaskTarget","App","DraggedTaskList","TotalTimeLength","updateCalendarLength","currentTasks","gridTotals","forEach","push","totalGridSize","reduce","accumulator","checkCalendarLength","updatedList","parentNode","splice","sortedList","draggedItem","react","TodoList_TodoContainer","planner_Calendar","DragDropContext","HTML5Backend","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.02a63932.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n      <form>\r\n        <input \r\n          type=\"text\" \r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          placeholder=\"Search...\" />\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default SearchBar;","import React, { Component } from 'react'\r\nimport { DragSource } from 'react-dnd';\r\n\r\n// The component itself\r\nexport class Task extends Component {\r\n  render() {\r\n    const { connectDragSource } = this.props;\r\n    return connectDragSource(\r\n      <li>\r\n        {this.props.children}\r\n      </li>\r\n        )\r\n      }\r\n    }\r\n    \r\n    // React DnD collect function\r\n    function collect(connect, monitor) {\r\n      return {\r\n        connectDragSource: connect.dragSource(),\r\n      }\r\n    }\r\n    \r\n    // React DnD spec object\r\n    const taskSpec = {\r\n        beginDrag(props, monitor, component) {\r\n          const item = { \r\n            id: props.id,\r\n            body: props.body,\r\n            timeLength: props.timeLength }\r\n          return item\r\n        }\r\n      }\r\n\r\nexport default DragSource(\"TODO\", taskSpec, collect)(Task);\r\n","import React from 'react';\r\nimport Task from './Task';\r\n\r\n// The component itself\r\nclass TaskHolder extends React.Component {\r\n  render() {\r\n    // This list is the result of searching for a task in the searchbar\r\n    const filteredList = this.props.taskList.filter(item =>\r\n      item.body\r\n        .toLowerCase()\r\n        .includes(this.props.searchTerm.toLowerCase())\r\n    );\r\n\r\n    // We map a component for each task in the parent state so we can make each item draggable\r\n    // We pass in body as a prop so it can be accessed by the draggable list items\r\n    const tasks = filteredList.map(task =>\r\n      <Task key={task.id} body={task.body} timeLength={task.timeLength}>\r\n        {task.body}\r\n        <i className=\"fas fa-trash fa-trash--todo\" data-key={task.id} onClick={this.props.onClick}></i>\r\n      </Task>\r\n    );\r\n\r\n    // We return a mapped list of filtered results \r\n    return (\r\n      <ul className=\"todo__list\">\r\n        {tasks}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\n  export default TaskHolder;","import React from 'react';\r\n\r\nfunction Add(props) {\r\n    return (\r\n      <form onSubmit={props.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add items...\"\r\n          onChange={props.onChange}\r\n          value={props.value}\r\n          />\r\n        <input \r\n          type=\"submit\"\r\n          value=\"Create\"\r\n           />\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default Add;","import React, { Component } from 'react';\r\nimport SearchBar from './Searchbar';\r\nimport TaskHolder from './Tasklist';\r\nimport CreateItem from './Add';\r\nimport SimpleStorage from 'react-simple-storage';\r\n\r\n// This placeholder task is here to introduce the user to placeholder tasks\r\nconst taskItems = [\r\n    {\r\n      id: 1,\r\n      timeLength: 1,\r\n      body: 'Free time'\r\n    }\r\n  ]\r\n  \r\n  \r\n  class TodoContainer extends Component {\r\n    state = {\r\n      taskList: taskItems,\r\n      searchTerm: '',\r\n      newTaskName: '',\r\n    }\r\n  \r\n    handleChange = (e) => {\r\n      this.setState({searchTerm: e.target.value});\r\n    }\r\n  \r\n    handleMake = (e) => {\r\n      this.setState({newTaskName: e.target.value})\r\n    }\r\n  \r\n    handleDelete = (e) => {\r\n      this.setState({taskList:\r\n        this.state.taskList.filter(item =>\r\n          item.id.toString() !== e.target.dataset.key.toString()) // We use .toString() so we can use !== \r\n      })\r\n    }\r\n\r\n    handleClearTodo = () => {\r\n      this.setState({\r\n        taskList: []\r\n      })\r\n    }\r\n  \r\n    handleSubmit = (e) => {\r\n      if (!this.state.newTaskName.length) {\r\n        e.preventDefault();\r\n        alert(\"You can't submit an empty task.\");\r\n        return\r\n      }\r\n  \r\n      e.preventDefault();\r\n      const uuidv4 = require('uuid/v4');\r\n      this.setState({\r\n        taskList: [{id: uuidv4(), body: this.state.newTaskName, timeLength: 1}, ...this.state.taskList],\r\n        newTaskName: ''\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"todoList\">\r\n        <SimpleStorage parent={this} />\r\n         <h1>Your Tasks:</h1>\r\n          <SearchBar \r\n            value={this.state.searchTerm}\r\n            onChange={this.handleChange} \r\n            />\r\n          <CreateItem \r\n            onSubmit={this.handleSubmit}\r\n            onChange={this.handleMake}\r\n            value={this.state.newTaskName}\r\n            />\r\n            <div className=\"todoControls\">\r\n              <button onClick={this.handleClearTodo}>Clear Tasks</button>\r\n              <button onClick={this.props.handleClearSchedule}>Clear Schedule</button>\r\n            </div>\r\n          <TaskHolder \r\n            taskList={this.state.taskList} \r\n            searchTerm={this.state.searchTerm}\r\n            onClick={this.handleDelete}\r\n            />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default TodoContainer;\r\n  ","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\n\r\nconst dragSpec = {\r\n    beginDrag(props, monitor, component) {\r\n        const item = { \r\n            id: props.id,\r\n            index: props.index\r\n         }\r\n        return item\r\n    }\r\n}\r\n\r\nfunction dragCollect(connect, monitor) {\r\n    return {\r\n        connectDragSource: connect.dragSource(),\r\n        isDragging: monitor.isDragging(),\r\n    }\r\n}\r\n\r\nconst dropSpec = {\r\n    hover(props, monitor, component) {\r\n        const item = { \r\n            id: props.id,\r\n            dropIndex: props.index,\r\n            dragIndex: monitor.getItem().index\r\n\r\n         }\r\n         if (!component) {\r\n             return\r\n         }\r\n\r\n        // We get the DOM node so can can determine if dragging up or dragging down\r\n         const node = ReactDOM.findDOMNode(component);\r\n\r\n         if (!node) {\r\n             return null\r\n         }\r\n\r\n         const dragIndex = item.dragIndex;\r\n         const dropIndex = item.dropIndex;\r\n\r\n        //  Don't replace list items with themselves\r\n         if (item.dropIndex === item.dragIndex) {\r\n             return\r\n         }\r\n\r\n        //  Get location of DOM node\r\n         const nodePosition = node.getBoundingClientRect()\r\n        //  Location of middle of node relative to top of viewport\r\n         const nodeVerticalCenter = \r\n            (nodePosition.bottom - nodePosition.top) / 2\r\n        // Get mouse position\r\n         const mousePosition = monitor.getClientOffset()\r\n        // This is the mouse's distance from the top of the node you're hovering above\r\n         const mousePositionFromTop = mousePosition.y - nodePosition.top \r\n\r\n        // Dragging downwards...\r\n        // If the mouse position is less pixels from the top than the node's vertical center is, do nothing\r\n         if (dragIndex < dropIndex && mousePositionFromTop < nodeVerticalCenter) {\r\n             return\r\n         }\r\n\r\n        //  Dragging upwards\r\n         if (dragIndex > dropIndex && mousePositionFromTop > nodeVerticalCenter) {\r\n             return\r\n         }\r\n         \r\n         props.moveCard(dragIndex, dropIndex);\r\n\r\n         monitor.getItem().index = dropIndex;\r\n\r\n    }\r\n}\r\n\r\nfunction dropCollect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        canDrop: monitor.canDrop()\r\n    }\r\n}\r\n\r\nexport class CTask extends Component {\r\n    render() {\r\n        const {\r\n            id, \r\n            body, \r\n            timeLength,\r\n            canDrop,\r\n            index, \r\n            incrementHeight, \r\n            decrementHeight, \r\n            deleteTask,\r\n            connectDragSource, \r\n            connectDropTarget, \r\n            isDragging\r\n        } = this.props;\r\n\r\n        const opacity = isDragging ? 0 : 1;\r\n        const border = canDrop ? '3px dashed var(--list-font-color)' : 'none';\r\n        return connectDropTarget(connectDragSource(\r\n            <li \r\n            key={id}\r\n            id={id}\r\n            data-index={index}\r\n            style={{opacity, gridRow:`span ${timeLength}`, border}}\r\n            >\r\n                <p>{body}</p>\r\n                <i className=\"fas fa-plus-circle\" onClick={incrementHeight}></i>\r\n                <i className=\"fas fa-minus-circle\" onClick={decrementHeight}></i>\r\n                <i className=\"fas fa-trash fa-trash--calendar\" onClick={deleteTask}></i>\r\n            </li>\r\n        ))\r\n    }\r\n}\r\n\r\nexport default DropTarget(\"CALENDARTASK\", dropSpec, dropCollect)(DragSource(\"CALENDARTASK\", dragSpec, dragCollect)(CTask))\r\n","import React, { Component } from 'react';\r\nimport { DropTarget } from 'react-dnd';\r\nimport CTask from './CTask';\r\n\r\nconst targetSpec = {\r\n    drop(props, monitor, component) {\r\n      const item = monitor.getItem();\r\n      props.onDrop(item);\r\n    }\r\n  }\r\n  \r\n  function collect(connect, monitor) {\r\n    return {\r\n      connectDropTarget: connect.dropTarget(),\r\n      canDrop: monitor.canDrop(),\r\n      isOver: monitor.isOver()\r\n    }\r\n  }\r\n\r\nexport class TaskTarget extends Component {\r\n\r\n    render() {\r\n        const { \r\n          connectDropTarget,\r\n           moveCard,\r\n           taskList,\r\n           canDrop,\r\n           isOver,\r\n           deleteTask,\r\n           incrementHeight,\r\n           decrementHeight\r\n          } = this.props;\r\n\r\n        let dropClass = '';\r\n        if (canDrop && !isOver) {\r\n          dropClass = 'calendar__dropZone--canDrop'\r\n        } else if ( canDrop && isOver) {\r\n          dropClass = 'calendar__dropZone--isOver'\r\n        } else {\r\n          dropClass = ''\r\n        }\r\n        \r\n        const tasks = taskList.map((item, i) => \r\n            <CTask \r\n            id={item.id} \r\n            key={item.id} \r\n            index={i} \r\n            body={item.body}\r\n            timeLength={item.timeLength}\r\n            moveCard={moveCard}\r\n            deleteTask={deleteTask}\r\n            incrementHeight={incrementHeight}\r\n            decrementHeight={decrementHeight}\r\n            />\r\n            )\r\n\r\n        return connectDropTarget(\r\n            <div className={`calendar__dropZone ${dropClass}`}>\r\n                <ul className=\"calendar__list\">\r\n                    {tasks}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropTarget(\"TODO\", targetSpec, collect)(TaskTarget);\r\n","import React, { Component } from 'react';\r\nimport TaskTarget from  './TaskTarget';\r\n\r\n// Draw dotted lines \r\n// Save the state to local history \r\n\r\n// Prevent tasks from going beyond 12:00pm\r\n// When dropping items, get timeLength attributes of all items. \r\n// If they sum up to greater than max grid rows, do nothing and return an error. \r\n// Also do this when incrementing items \r\n\r\nclass Calendar extends Component {\r\n  render() {\r\n    const { \r\n      onDrop, \r\n      moveCard,\r\n      taskList,\r\n      handleDecrement,\r\n      handleIncrement,\r\n      deleteTask\r\n      } = this.props;\r\n\r\n    return(\r\n    <div className=\"calendar\">\r\n     <section className=\"calendar__times\">\r\n       <h1>6:00</h1>\r\n       <h1>6:30</h1>\r\n       <h1>7:00</h1>\r\n       <h1>7:30</h1>\r\n       <h1>8:00</h1>\r\n       <h1>8:30</h1>\r\n       <h1>9:00</h1>\r\n       <h1>9:30</h1>\r\n       <h1>10:00</h1>\r\n       <h1>10:30</h1>\r\n       <h1>11:00</h1>\r\n       <h1>11:30</h1>\r\n       <h1>12:00</h1>\r\n     </section>\r\n     \r\n      <TaskTarget \r\n      onDrop={onDrop}\r\n      taskList={taskList} \r\n      moveCard={moveCard}\r\n      incrementHeight={handleIncrement}\r\n      decrementHeight={handleDecrement}\r\n      deleteTask={deleteTask}\r\n      />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Calendar;","import React, { Component, Fragment } from 'react';\r\nimport TodoContainer from './components/TodoList/TodoContainer';\r\nimport Calendar from './components/planner/Calendar';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport SimpleStorage from 'react-simple-storage';\r\n\r\nimport './stylesheets/App.css';\r\nimport './stylesheets/calendar.css';\r\nimport './stylesheets/todo.css';\r\n\r\n// Future goals:\r\n// 1. Edit list items?\r\n\r\nclass App extends Component {\r\n  state = {\r\n    DraggedTaskList: [],\r\n    TotalTimeLength: ''\r\n  }\r\n\r\n  // Helper function to extract grid-template sizes from tasks, then update state\r\n  updateCalendarLength = () => {\r\n    const currentTasks = [...this.state.DraggedTaskList];\r\n    const gridTotals = [];\r\n\r\n    currentTasks.forEach(task => \r\n       gridTotals.push(task.timeLength));\r\n\r\n    const totalGridSize = [...gridTotals].reduce((accumulator, value) => accumulator + value);\r\n    this.setState({ TotalTimeLength: totalGridSize});\r\n  }\r\n\r\n  // Helper function to check if schedule size is large enough to cause CSS problems\r\n  checkCalendarLength = () => {\r\n    if (this.state.TotalTimeLength >= 12) {\r\n      alert('Your morning schedule is full. Please delete or reduce times of tasks.');\r\n      return true \r\n    }\r\n  }\r\n\r\n  // This function is called when dragging a task into the droppable area. \r\n  onDrop = (item) => {\r\n    if (this.checkCalendarLength()) {\r\n      return\r\n    };\r\n    const uuidv4 = require('uuid/v4');\r\n    this.setState({\r\n      DraggedTaskList: [...this.state.DraggedTaskList, \r\n        {id: uuidv4(), body: item.body, timeLength: item.timeLength} \r\n      ]\r\n    })\r\n\r\n    this.updateCalendarLength()\r\n  }\r\n\r\n  handleIncrement = (e) => {\r\n    if (this.checkCalendarLength()) {\r\n      return\r\n    };\r\n    const updatedList = [...this.state.DraggedTaskList]\r\n    const index = e.target.parentNode.dataset.index;\r\n    let item = updatedList[index]\r\n    item.timeLength++;\r\n    this.setState({DraggedTaskList: updatedList});\r\n    this.updateCalendarLength();\r\n  }\r\n\r\n  handleDecrement = (e) => {\r\n    const updatedList = [...this.state.DraggedTaskList]\r\n    const index = e.target.parentNode.dataset.index;\r\n    let item = updatedList[index]\r\n    if (item.timeLength === 1) {\r\n      alert('Task cannot be less than 30 minutes');\r\n      return;\r\n    }\r\n    item.timeLength--;\r\n    this.setState({DraggedTaskList: updatedList});\r\n    this.updateCalendarLength();\r\n  }\r\n\r\n  deleteTask = (e) => {\r\n    const updatedList = [...this.state.DraggedTaskList]\r\n    const index = e.target.parentNode.dataset.index;\r\n    updatedList.splice(index, 1);\r\n    this.setState({\r\n      DraggedTaskList: updatedList\r\n    });\r\n    \r\n    if (updatedList.length === 0) {\r\n      this.setState({\r\n        TotalTimeLength: ''\r\n      })\r\n    } else {\r\n      const currentTasks = [...updatedList];\r\n      const gridTotals = [];\r\n  \r\n      currentTasks.forEach(task => \r\n         gridTotals.push(task.timeLength));\r\n  \r\n      const totalGridSize = [...gridTotals].reduce((accumulator, value) => accumulator + value);\r\n      this.setState({ TotalTimeLength: totalGridSize});\r\n\r\n    }\r\n  }\r\n\r\n  moveCard = (dragIndex, dropIndex) => {\r\n    const sortedList = [...this.state.DraggedTaskList];\r\n    const draggedItem = sortedList[dragIndex]\r\n    sortedList.splice(dragIndex, 1);\r\n    sortedList.splice(dropIndex, 0, draggedItem);\r\n    this.setState({\r\n      DraggedTaskList: sortedList\r\n    })\r\n  }\r\n\r\n  handleClearSchedule = () => {\r\n    this.setState({\r\n      DraggedTaskList: [],\r\n      TotalTimeLength: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <SimpleStorage parent={this} />\r\n        <TodoContainer \r\n          handleClearSchedule={this.handleClearSchedule}\r\n           />\r\n        <Calendar \r\n          taskList={this.state.DraggedTaskList} \r\n          onDrop={this.onDrop}\r\n          handleDecrement={this.handleDecrement}\r\n          handleIncrement={this.handleIncrement}\r\n          deleteTask={this.deleteTask}\r\n          moveCard={this.moveCard}\r\n          />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DragDropContext(HTML5Backend)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n    module.hot.accept()\n}"],"sourceRoot":""}